language: python

env:
  global:
    - TWINE_USERNAME: zope.wheelbuilder
    # this sets $PYPIPASSWORD
    - secure: "edbJQIhe7grjaug7dxExoyB0zkrLca5IphzuQd2IfjGjBCY6Dn+QEBtDOMOcPjUsSvgxWL2XG2ZGIFF33bsoFlq0bZFPMtv5ZQ6jcpYQEpPX61fHsNzPs2RXavpHgHFC4aXt1o7jH7aSeImV98WWsNZTL5rhW4aHbgOM/jnnWdc="

python:
  - 2.7
  - 3.5
  - 3.6
  - 3.7
  - 3.8
  - pypy
  - pypy3

jobs:
  include:

    # manylinux wheel builds
    - name: 64-bit manylinux wheels (all Pythons)
      services: docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_x86_64
      install: docker pull $DOCKER_IMAGE
      script: bash .manylinux.sh

    - name: 32-bit manylinux wheels (all Pythons)
      services: docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_i686 PRE_CMD=linux32
      install: docker pull $DOCKER_IMAGE
      script: bash .manylinux.sh

    # It's important to use 'macpython' builds to get the least
    # restrictive wheel tag. It's also important to avoid
    # 'homebrew 3' because it floats instead of being a specific version.
    - name: Python 2.7 wheels for MacOS
      os: osx
      language: generic
      # We require at least 2.7.15 to upload wheels.
      # See https://github.com/zopefoundation/BTrees/issues/113
      env: TERRYFY_PYTHON='macpython 2.7.17'
    - name: Python 3.5 wheels for MacOS
      os: osx
      language: generic
      env: TERRYFY_PYTHON='macpython 3.5'
    - name: Python 3.6 wheels for MacOS
      os: osx
      language: generic
      env: TERRYFY_PYTHON='macpython 3.6.1'
    - name: Python 3.7 wheels for MacOS
      os: osx
      language: generic
      env: TERRYFY_PYTHON='macpython 3.7.0'

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      git clone https://github.com/MacPython/terryfy
      source terryfy/travis_tools.sh
      get_python_environment $TERRYFY_PYTHON venv
    fi

install:
  - pip install -U pip setuptools
  - pip install -U coveralls coverage
  - pip install .

script:
  - coverage run setup.py -q test

after_success:
  - coveralls
  - |
    if [[ $TRAVIS_TAG && "$TRAVIS_OS_NAME" == "osx" ]]; then
      pip install twine
      python setup.py bdist_wheel
      TWINE_PASSWORD=$PYPIPASSWORD twine upload --skip-existing dist/*
    fi
  - |
    if [[ $TRAVIS_TAG && -n "$DOCKER_IMAGE" ]]; then
      pip install twine
      TWINE_PASSWORD=$PYPIPASSWORD twine upload --skip-existing wheelhouse/*
    fi

notifications:
  email: false

cache: pip

before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log
